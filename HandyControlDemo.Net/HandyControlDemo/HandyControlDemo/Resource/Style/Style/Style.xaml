<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">

    <Style x:Key="MyToggleButton"
           BasedOn="{StaticResource ToggleButtonBaseStyle}"
           TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BasePrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboToggleButton"
           BasedOn="{StaticResource ComboBoxBaseStyle}"
           TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ComboBox Name="ComboBox1"
                                  SelectedIndex="{TemplateBinding SelectedIndex}"
                                  ItemsSource="{TemplateBinding ItemsSource}"
                                  Foreground="Transparent">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <!--<StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding ImgPath}" Width="32"/>
                                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                    </StackPanel>-->
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding ImgPath}" Style="{StaticResource TextBlockSubTitle}" />
                                        <TextBlock Text="{Binding Name}"
                                                   Margin="5,0,0,0"
                                                   Style="{StaticResource TextBlockSubTitle}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Border HorizontalAlignment="Left" BorderThickness="0"
                                Margin="3"
                                Background="{Binding ElementName=ComboBox1, Path=Background}"
                                Width="{Binding ElementName=ComboBox1, Path=ActualHeight}" />
                        <ToggleButton BorderThickness="0" Margin="3"
                                      HorizontalAlignment="Left"
                                      Height="{Binding ElementName=ComboBox1, Path=ActualHeight}"
                                      Width="{Binding ElementName=ComboBox1, Path=ActualHeight}"
                                      Style="{StaticResource MyToggleButton}"
                                      DataContext="{Binding ElementName=ComboBox1, Path=SelectedItem}"
                                      IsChecked="{Binding IsSelected}">
                            <ToggleButton.Content>
                                <StackPanel>
                                    <!--<Image HorizontalAlignment="Left"  Source="{Binding ImgPath}"/>-->
                                    <TextBlock Text="{Binding ImgPath}"
                                               Style="{StaticResource TextBlockLarge}"
                                               FontSize="{TemplateBinding FontSize}" />
                                    <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockSubTitle}" />
                                </StackPanel>
                            </ToggleButton.Content>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CirclePanelButton"
           BasedOn="{StaticResource ButtonCustom}"
           TargetType="Button">
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Height" Value="77" />
        <Setter Property="Width" Value="36.06" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Path Data="{StaticResource CirclePanelDemoGeometry}"
                              Fill="{DynamicResource PrimaryBrush}"
                              Height="77" Width="36.06" />
                        <Path Data="{StaticResource CirclePanelRightGeometry}"
                              Stretch="Uniform" Margin="12"
                              Fill="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MessageBoxCustom"
           TargetType="hc:MessageBox"
           BasedOn="{StaticResource {x:Type hc:MessageBox}}">
        <Setter Property="NonClientAreaBackground" Value="#262e2f" />
        <Setter Property="OtherButtonHoverBackground" Value="#888580" />
        <Setter Property="OtherButtonForeground" Value="White" />
        <Setter Property="OtherButtonHoverForeground" Value="White" />
        <Setter Property="NonClientAreaForeground" Value="White" />
        <Setter Property="CloseButtonForeground" Value="White" />
        <Setter Property="Icon" Value="pack://application:,,,/Resource/Image/icon.ico" />
    </Style>

    <Style x:Key="DemoInfoSortButtonStyle"
           BasedOn="{StaticResource ToggleButtonCustom}"
           TargetType="ToggleButton" x:Shared="False">
        <Setter Property="Content">
            <Setter.Value>
                <Border CornerRadius="4" BorderThickness="1"
                        BorderBrush="{DynamicResource BorderBrush}"
                        Background="{DynamicResource RegionBrush}"
                        Height="30" Width="30">
                    <Image Stretch="None" Source="pack://application:,,,/Resource/Image/LeftMainContent/SortAscending_gray_16x.png" />
                </Border>
            </Setter.Value>
        </Setter>
        <Setter Property="hc:StatusSwitchElement.CheckedElement">
            <Setter.Value>
                <Border CornerRadius="4" Height="30"
                        Width="30" BorderThickness="1"
                        BorderBrush="{DynamicResource PrimaryBrush}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="Custom1Transition" x:Shared="False">
        <DoubleAnimation From="50" To="0"
                         Duration="0:0:0.4"
                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
            <DoubleAnimation.EasingFunction>
                <ElasticEase Oscillations="1" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="Custom2Transition" x:Shared="False">
        <DoubleAnimation From="10" To="0"
                         Duration="0:0:0.4"
                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
            <DoubleAnimation.EasingFunction>
                <ElasticEase Oscillations="1" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="Custom3Transition" x:Shared="False">
        <DoubleAnimation From=".8" To="1"
                         Duration="0:0:0.4"
                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <DoubleAnimation.EasingFunction>
                <ElasticEase Oscillations="1" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Style x:Key="ListBoxItemTransparent"
           BasedOn="{StaticResource ListBoxItemBaseStyle}"
           TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="ListBoxTransparent"
           BasedOn="{StaticResource ListBoxBaseStyle}"
           TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemTransparent}" />
    </Style>

</ResourceDictionary>